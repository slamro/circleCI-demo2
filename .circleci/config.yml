version: 2.1
orbs:
  python: circleci/python@1.4.0
jobs: # we now have TWO jobs, so that a workflow can coordinate them!
  build:
    docker:
      - image: python:3.6.3-jessie
    working_directory: /tmp
    steps:
      - run:
          name: Creating Dummy Artifacts
          command: |
            echo "my artifact file" > /tmp/art-1;
            mkdir /tmp/artifacts;
            echo "my artifact files in a dir" > /tmp/artifacts/art-2;
      - store_artifacts:
          path: /tmp/art-1
          destination: artifact-file
      - store_artifacts:
          path: /tmp/artifacts
  publish:
    executor: python/default
    steps:
      - checkout
      - python/install-packages:
          args: pytest
          pkg-manager: pipenv
      - run:
          command: |
            pipenv run pytest --version
          name: Test it
  one: # This is our first job.
    docker: # it uses the docker executor
      - image: circleci/ruby:2.4.1 # specifically, a docker image with ruby 2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    # Steps are a list of commands to run inside the docker container above.
    steps:
      - checkout # this pulls code down from GitHub
      - run: echo "A first hello" # This prints "A first hello" to stdout.
      - run: sleep 25 # a command telling the job to "sleep" for 25 seconds.
  two: # This is our second job.
    docker: # it runs inside a docker image, the same as above.
      - image: circleci/ruby:2.4.1
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    steps:
      - checkout
      - run: echo "A more familiar hi" # We run a similar echo command to above.
      - run: sleep 15 # and then sleep for 15 seconds.
  Hello-World:
    docker:
      - image: alpine:3.7
    steps:
      - run:
          name: Hello World
          command: |
            echo 'Hello World!'
            echo 'This is the delivery pipeline'
  I-Have-Code:
    docker:
      - image: alpine:3.7
    steps:
      - checkout
      - run:
          name: Code Has Arrived
          command: |
            ls -al
            echo '^^^That should look familiar^^^'
  Run-With-Node:
    docker:
      - image: circleci/node:14-browsers
    steps:
      - run:
          name: Running In A Container With Node
          command: |
            node -v
  Now-Complete:
    docker:
      - image: alpine:3.7
    steps:
      - run:
          name: Approval Complete
          command: |
            echo 'Do work once the approval has completed'
# orbs:
#   python: circleci/python@1.4.0
# Under the workflows: map, we can coordinate our two jobs, defined above.
workflows:
  version: 2.1
  one_and_two: # this is the name of our workflow
    jobs: # and here we list the jobs we are going to run.
      - build
      - publish
      - one:
         requires:
          - build
      - two
      - Hello-World:
         requires:
          - two
      - I-Have-Code:
         requires:
          - one
          - Hello-World
      - Run-With-Node:
         requires:
          - Hello-World
      - Hold-For-Approval:
         type: approval
         requires:
          - Run-With-Node
          - I-Have-Code
      - Now-Complete:
         requires:
          - Hold-For-Approval
